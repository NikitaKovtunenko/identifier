 
1 ЗАДАНИЕ - ответы на вопросы, письменно:
 
1. Что такое Uniform initialization, чем отличается от Aggregate initialization?
Разница в том что, Aggregate initialization может быть использованно только с агрегатом.
Агрегатом является один из следующих типов у которого нет конструкторов обьявленных пользователем, нет инициализаторов по умолчанию.Не включены в наследование.
Скорее всего на этом все.

2. Что такое copy elision?
 Это оптимизация компилятора при возврате обьекта из функции. При этом сокращается вызов конструкторов копирования и деструкторов.
 
3.Что такое move-семантика?
Средство языка, при котором сокращаються издержки которые приходились на копирование. Обьект перемещается, а не копируется. В тестовом задании, я использую move семантику
,в том числе и для демонтсрации.
 
 
4. Можно ли вызывать исключение в конструкторе?
Исключение вызвать можно, но если во время создаия обьекта будет вызванно исключение, обьект не будет сконструирован полностью и могут возниктуть утечки памяти
, так как обьект не сконструирован полность деструктор не будет вызван. Можно обрабатывать исключение прям в конструкторе и освобождать динамически захваченную память если
такова есть. Деструкторы членов-данных будут вываны корректно, если они стэковые.
 
5. Чем отличается constexpr от const?
Различие в том, что constexpr собщает компилятору, что выражение должно быть вычисленно на этапе компиляции, следовательно должно быть инициализированно
данными которые известны на этапе компиляции.
 
 
2 ЗАДАНИЕ - решение задачи, необходимо предоставить рабочий код.
 
Есть последовательность идентификаторов, строящаяся по следующим правилам:
 
1. Первый идентификатор последовательности имеет вид «A1», второй — «A2», третий - «A3» и так далее. За «A9» следует «B1». Следующий после «Z9»
имеет вид «A1-A1», потом «A1-A2» и так далее. После «A1-Z9» следует «A2-A1».
 
2. Максимальная длина идентификатора - десять групп по два символа.
 
3. В идентификаторах никогда не должны присутствовать буквы «D», «F», «G», «J», «M», «Q», «V» и цифра «0». Необходимо реализовать класс, обеспечивающий работу с идентификатором
по заданным правилам.
Класс должен обладать следующим функционалом: • Метод, устанавливающий текущее значение идентификатора • Метод, инкрементирующий значение идентификатора
и возвращающий новое значение Технические требования к решению:
1. Код должен быть потокобезопасным. 2. Код должен компилироваться. 3. Код должен быть кроссплатформенным (успешно собираться компиляторами msvc/gcc/clang).
 
4. Для решения задачи разрешается использовать только стандартную библиотеку С++(стандарт до C++17 включительно).
 
Ответ на задания просим прислать в течении недели, не дольше.